static_resources:
  listeners:
  - name: listener_http
    address:
      socket_address: { address: 0.0.0.0, port_value: 8440 }
    filter_chains:
    - filters:
      - name: envoy.http_connection_manager
        config:
        #typed_config:
          #"@type": type.googleapis.com/envoy.config.filter.network.http_connection_manager.v2.HttpConnectionManager
          codec_type: auto
          stat_prefix: ingress_http
          route_config:
            name: local_route_http
            virtual_hosts:
            - name: local_service
              domains: ["*"]
              cors:
                #allow_origin: ["http://localhost:8083","http://127.0.0.1:8083"]
                allow_origin_string_match:
                  - safe_regex:
                      google_re2: {}
                      regex: \*
                allow_methods: GET, PUT, DELETE, POST, OPTIONS
                allow_headers: keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,custom-header-1,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout
                max_age: "1728000"
                expose_headers: custom-header-1,grpc-status,grpc-message
                #enabled: true
                filter_enabled:
                  default_value:
                    numerator: 100
                    denominator: HUNDRED
              routes:
              - match: { prefix: "/" }
                route:
                  cluster: auge_service
                  max_grpc_timeout: 30s
          http_filters:
            - name: envoy.grpc_web
            - name: envoy.cors
            - name: envoy.router
  - name: listener_https
    address:
      socket_address: { address: 0.0.0.0, port_value: 8443 }
    filter_chains:
    - filters:
      - name: envoy.http_connection_manager
        config:
        #typed_config:
          #"@type": type.googleapis.com/envoy.config.filter.network.http_connection_manager.v2.HttpConnectionManager
          codec_type: auto
          stat_prefix: ingress_http
          route_config:
            name: local_route_https
            virtual_hosts:
            - name: local_service
              domains: ["*"]
              cors:
                #allow_origin: ["https://auge.levius.com.br"]
                allow_origin_string_match:
                  - safe_regex:
                      google_re2: {}
                      regex: \*
                allow_methods: GET, PUT, DELETE, POST, OPTIONS
                allow_headers: keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,custom-header-1,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout
                max_age: "1728000"
                expose_headers: custom-header-1,grpc-status,grpc-message
                #enabled: true
                filter_enabled:
                  default_value:
                    numerator: 100
                    denominator: HUNDRED
              routes:
              - match: { prefix: "/" }
                route:
                  cluster: auge_service
                  max_grpc_timeout: 30s
          http_filters:
          - name: envoy.grpc_web
          - name: envoy.cors
          - name: envoy.router
      tls_context:
        common_tls_context:
          tls_certificates:
            - certificate_chain:
                filename: "/etc/auge_server/certificate/cert.pem"
              private_key:
                filename: "/etc/auge_server/certificate/privkey.pem"
  clusters:
  - name: auge_service
    connect_timeout: 10s
    type: logical_dns
    #type: strict_dns
    http2_protocol_options: {}
    upstream_connection_options:
      tcp_keepalive:
        keepalive_time: 300
    lb_policy: round_robin
    hosts: [{ socket_address: { address: auge-server, port_value: 9091 }}]
admin:
  access_log_path: /tmp/admin_access.log
  address:
    socket_address: { address: 0.0.0.0, port_value: 8081 }