// Copyright (c) 2019, Levius Tecnologia Ltda. All rights reserved.
// Author: Samuel C. Schwebel

syntax = "proto3";

package auge.protobuf;

import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";
import "general/common.proto";
import "general/organization.proto";
import "general/group.proto";
import "general/user.proto";
import "objective/measure.proto";

// The service definition.
service ObjectiveService {

  rpc GetObjectives (ObjectiveGetRequest) returns (ObjectivesResponse) {}
  rpc GetObjective (ObjectiveGetRequest) returns (Objective) {}

  rpc CreateObjective (ObjectiveRequest) returns (IdResponse) {}
  rpc UpdateObjective (ObjectiveRequest) returns (google.protobuf.Empty) {}
  rpc DeleteObjective (ObjectiveDeleteRequest) returns (google.protobuf.Empty) {}
}

// Message to respective domain object.
message Objective {

  // Base
  string id = 1;
  int32 version = 2;

  // Specific
  string name = 3;
  string description = 4;
  google.protobuf.Timestamp start_date = 5;
  google.protobuf.Timestamp end_date = 6;
  Organization organization = 7;
  Group group = 8;
  Objective aligned_to = 9;
  User leader = 10;
  bool archived = 11;

  // Transients fields.
  repeated Objective aligned_with_children = 12;
  repeated Measure measures = 13;
}

// Message to request param related to domain object.
message ObjectiveRequest {
   Objective objective = 1;
   string authenticated_user_id = 2;
   string authenticated_organization_id = 3;
}


// Message request for delete to related domain model.
message ObjectiveDeleteRequest {
  string objective_id = 1;
  int32 objective_version = 2;
  string authenticated_user_id = 3;
  string authenticated_organization_id = 4;
}

// Response list of the objectives
message Objectives {
  repeated Objective objectives = 1;
}

// Used to query select params
message ObjectiveGetRequest {
  string id = 1;
  string organization_id = 2;
  int32 aligned_to_recursive = 3;
  bool with_measures = 4;
  bool tree_aligned_with_children = 5;
  bool with_profile = 6;
  bool with_history = 7;
  bool with_archived = 8;
}

// Response list of the objectives
message ObjectivesResponse {
  repeated Objective objectives = 1;
  bool web_work_around = 2;
}