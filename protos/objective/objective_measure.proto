// Copyright (c) 2019, Levius Tecnologia Ltda. All rights reserved.
// Author: Samuel C. Schwebel

syntax = "proto3";

package auge.protobuf;

import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";
import "general/organization.proto";
import "general/group.proto";
import "general/user.proto";

/// OBJECTIVE
// The service definition.
service ObjectiveService {

  rpc GetObjectives (ObjectiveGetRequest) returns (ObjectivesResponse) {}
  rpc GetObjective (ObjectiveGetRequest) returns (Objective) {}

  rpc CreateObjective (ObjectiveRequest) returns (google.protobuf.StringValue) {}
  rpc UpdateObjective (ObjectiveRequest) returns (google.protobuf.Empty) {}
  rpc DeleteObjective (ObjectiveDeleteRequest) returns (google.protobuf.Empty) {}
}

// Message to respective domain object.
message Objective {

  // Base
  string id = 1;
  int32 version = 2;

  // Specific
  string name = 3;
  string description = 4;
  google.protobuf.Timestamp start_date = 5;
  google.protobuf.Timestamp end_date = 6;
  Organization organization = 7;
  Group group = 8;
  Objective aligned_to = 9;
  User leader = 10;
  bool archived = 11;

  // Transients fields.
  repeated Objective aligned_with_children = 12;
  repeated Measure measures = 13;
}

// Message to request param related to domain object.
message ObjectiveRequest {
   Objective objective = 1;
   string auth_user_id = 2;
   string auth_organization_id = 3;
}


// Message request for delete to related domain model.
message ObjectiveDeleteRequest {
  string objective_id = 1;
  int32 objective_version = 2;
  string auth_user_id = 3;
  string auth_organization_id = 4;
}

// Response list of the objectives
message Objectives {
  repeated Objective objectives = 1;
}

// Used to query select params
message ObjectiveGetRequest {
  string id = 1;
  string organization_id = 2;
  int32 aligned_to_recursive = 3;
  bool tree_aligned_with_children = 4;
  bool with_measures = 5;
  bool with_user_profile = 6;
  bool with_archived = 7;
}

// Response list of the objectives
message ObjectivesResponse {
  repeated Objective objectives = 1;
}

/// MEASURE
// The service definition.
service MeasureService {

  rpc GetMeasures (MeasureGetRequest) returns (MeasuresResponse) {}
  rpc GetMeasure (MeasureGetRequest) returns (Measure) {}

  rpc CreateMeasure (MeasureRequest) returns (google.protobuf.StringValue) {}
  rpc UpdateMeasure (MeasureRequest) returns (google.protobuf.Empty) {}
  rpc DeleteMeasure (MeasureDeleteRequest) returns (google.protobuf.Empty) {}

  rpc GetMeasureUnits (google.protobuf.Empty) returns (MeasureUnitsResponse) {}

  rpc GetMeasureProgresses (MeasureProgressGetRequest) returns (MeasureProgressesResponse) {}
  rpc GetMeasureProgress (MeasureProgressGetRequest) returns (MeasureProgress) {}

  rpc CreateMeasureProgress (MeasureProgressRequest) returns (google.protobuf.StringValue) {}
  rpc UpdateMeasureProgress (MeasureProgressRequest) returns (google.protobuf.Empty) {}
  rpc DeleteMeasureProgress (MeasureProgressDeleteRequest) returns (google.protobuf.Empty) {}
}

// Message to respective domain object.
message Measure {

  // Base
  string id = 1;
  int32 version = 2;

  // Specific
  string name = 3;
  string description = 4;
  string metric = 5;
  int32 decimals_number = 6;
  double start_value = 7;
  double end_value = 8;
  MeasureUnit measure_unit = 9;

  // Transient
  double current_value = 10; // field calculeted on measureProgress

  repeated MeasureProgress measure_progress = 11;

  Objective objective = 12;
}

// Message to request param related to domain object.
message MeasureRequest {
  Measure measure = 1;
  string objective_id = 2; // used just to identify parent on request
  string auth_user_id = 3;
  string auth_organization_id = 4;
}

// Message request for delete related to domain object.
message MeasureDeleteRequest {
  string measure_id = 1;
  int32 measure_version = 2;
  string auth_user_id = 3;
  string auth_organization_id = 4;
}

// Response list of the measures
message MeasuresResponse {
  repeated Measure measures = 1;
}

// Request for query select
message MeasureGetRequest {
  string objective_id = 1;
  string id = 2;
  bool with_objective = 3;
}

// Message to respective domain object.
message MeasureUnit {
  string id = 1;

  string symbol = 2;
  string name = 3;
}

// Response list of the measureUnits
message MeasureUnitsResponse {
  repeated MeasureUnit measureUnits = 1;
}

// Message to respective domain object.
message MeasureProgress {
  // Base
  string id = 1;
  int32 version = 2;

  // Specific
  google.protobuf.Timestamp date = 3;
  double current_value = 4;
  string comment = 5;

  Measure measure = 6;
}

// Message to request param related to domain object.
message MeasureProgressRequest {
  MeasureProgress measure_progress = 1;
  string measure_id = 2; // used just to identify parent on request
  string auth_user_id = 3;
  string auth_organization_id = 4;
}

// Message request for delete to related domain model .
message MeasureProgressDeleteRequest {
  string measure_progress_id = 1;
  int32 measure_progress_version = 2;
  string auth_user_id = 3;
  string auth_organization_id = 4;
}

// Response list of the MeasureProgress
message MeasureProgressesResponse {
  repeated MeasureProgress measure_progresses = 1;
}

// Request for query select
message MeasureProgressGetRequest {
  string id = 1;
  string measure_id = 2;
  bool with_measure = 3;
}