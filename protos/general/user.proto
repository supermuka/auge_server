// Copyright (c) 2019, Levius Tecnologia Ltda. All rights reserved.
// Author: Samuel C. Schwebel

syntax = "proto3";

package auge.protobuf;

import "google/protobuf/empty.proto";
import "google/protobuf/wrappers.proto";
import "general/organization.proto";

/// USER
// The service definition.
service UserService {

    rpc GetUsers (UserGetRequest) returns (UsersResponse) {}
    rpc GetUser (UserGetRequest) returns (User) {}

    rpc CreateUser (UserRequest) returns (google.protobuf.StringValue) {}
    rpc UpdateUser (UserRequest) returns (google.protobuf.Empty) {}
    rpc DeleteUser (UserDeleteRequest) returns (google.protobuf.Empty) {}

}

// Message to respective domain object.
message User {
    string id = 1;
    int32 version = 2;
    string name = 3;
    bool inactive = 4;
    Organization managed_by_organization = 5;
    UserProfile user_profile = 6;
}

// Message request related to domain object.
message UserRequest {
    User user = 1;
    string auth_user_id = 2;
    string auth_organization_id = 3;
}

// Message request for delete related to domain object.
message UserDeleteRequest {
    string user_id = 1;
    int32 user_version  = 2;
    string auth_user_id = 3;
    string auth_organization_id = 4;
}

/// USERPROFILE
// Message to respective domain object.
message UserProfile {
 //   bool is_super_admin = 1;
    // string image = 2;
    string e_mail = 1;
    bool e_mail_notification = 2;
    string image = 3;
    string idiom_locale = 4;
}

message UserGetRequest {
    string id = 1;
    string managed_by_organization_id = 2;
    string managed_by_organization_id_or_accessed_by_organization_id = 3;
    string accessedByOrganizationId = 4;
    bool with_user_profile = 5;
    bool with_objective = 6;
}

// Response list of the organization
message UsersResponse {
    repeated User users = 1;
}