// Copyright (c) 2019, Levius Tecnologia Ltda. All rights reserved.
// Author: Samuel C. Schwebel

syntax = "proto3";

package auge.protobuf;

import "google/protobuf/empty.proto";
import "google/protobuf/wrappers.proto";
import "general/user.proto";

// The service definition.
service UserIdentityService {

    rpc GetUserIdentities (UserIdentityGetRequest) returns (UserIdentitiesResponse) {}
    rpc GetUserIdentity (UserIdentityGetRequest) returns (UserIdentity) {}

    rpc CreateUserIdentity (UserIdentityRequest) returns (google.protobuf.StringValue) {}
    rpc UpdateUserIdentity (UserIdentityRequest) returns (google.protobuf.Empty) {}
    rpc DeleteUserIdentity (UserIdentityDeleteRequest) returns (google.protobuf.Empty) {}

    rpc GenerateNewPasswordCodeAndSendEmail(NewPasswordCodeRequest) returns (NewPasswordCodeResponse) {}
    rpc UpdateUserIdentityPassword(UserIdentityPasswordRequest) returns (google.protobuf.Empty) {}
}

// Message to respective domain object.
message UserIdentity {
    string id = 1;
    int32 version = 2;
    string identification = 4;
    string password = 5;
    string password_salt = 6;
    string password_hash = 7;
    int32 provider = 8;
    string provider_object_id = 9;
    string provider_dn = 10;
    User user = 11;
}

// Message request related to domain object.
message UserIdentityRequest {
    UserIdentity user_identity = 1;
    string auth_user_id = 2;
    string auth_organization_id = 3;
}

// Message request for delete related to domain object.
message UserIdentityDeleteRequest {
    string user_identity_id = 1;
    int32 user_identity_version  = 2;
    string auth_user_id = 3;
    string auth_organization_id = 4;
}

message UserIdentityGetRequest {
    string id = 1;
    string identification = 2;
    string password = 3;
    string user_id = 4;
    string managed_by_organization_id = 5;
    bool with_user_profile = 6;
}

message NewPasswordCodeRequest {
    string identification = 1;
}

message UserIdentityPasswordRequest {
    string identification = 1;
    string password = 2;
}

// Response list of the organization
message UserIdentitiesResponse {
    repeated UserIdentity userIdentities = 1;
}

message NewPasswordCodeResponse {
    string code = 1;
    string e_mail = 2;
}