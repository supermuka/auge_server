// Copyright (c) 2019, Levius Tecnologia Ltda. All rights reserved.
// Author: Samuel C. Schwebel

syntax = "proto3";

package auge.protobuf;

import "google/protobuf/empty.proto";
import "google/protobuf/wrappers.proto";
import "general/user.proto";
import "general/organization.proto";

// The service definition.
service GroupService {

    rpc GetGroups (GroupGetRequest) returns (GroupsResponse) {}
    rpc GetGroup (GroupGetRequest) returns (Group) {}

    rpc CreateGroup (GroupRequest) returns (google.protobuf.StringValue) {}
    rpc UpdateGroup (GroupRequest) returns (google.protobuf.Empty) {}
    rpc DeleteGroup (GroupDeleteRequest) returns (google.protobuf.Empty) {}
//    rpc SoftDeleteGroup (Group) returns (google.protobuf.Empty) {} // Normally returns Empty, but as this system uses "soft delete" approach, must be returned the resource updated.
}

// Message to respective domain object.
message Group {
    string id = 1;
    int32 version = 2;

    string name = 3;
    bool inactive = 4;
    int32 group_type_index = 5;
    Organization organization = 6;
    Group super_group = 7;
    User leader = 8;
    repeated User members = 9;
}

// Message request related to domain object.
message GroupRequest {
    Group group = 1;
    string auth_user_id = 2;
    string auth_organization_id = 3;
}

// Message request for delete  related to domain object.
message GroupDeleteRequest {
    string group_id = 1;
    int32 group_version = 2;
    string auth_user_id = 3;
    string auth_organization_id = 4;
}

// Request for query select
message GroupGetRequest {
    string id = 1;
    string organization_id = 2;
    int32 aligned_to_recursive = 3;
}

// Request for query select
message GroupTypeGetRequest {
    string id = 1;
}

// Response list of the organization
message GroupsResponse {
    repeated Group groups = 1;
}