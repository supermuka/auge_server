// Copyright (c) 2019, Levius Tecnologia Ltda. All rights reserved.
// Author: Samuel C. Schwebel

syntax = "proto3";

package auge.protobuf;

import "general/common.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";

import "general/user.proto";
import "initiative/stage.proto";
import "general/history_item.proto";

// The service definition.
service WorkItemService {

    rpc GetWorkItems (WorkItemGetRequest) returns (WorkItemsResponse) {}
    rpc GetWorkItem (WorkItemGetRequest) returns (WorkItem) {}

    rpc CreateWorkItem (WorkItem) returns (IdResponse) {}
    rpc UpdateWorkItem (WorkItem) returns (google.protobuf.Empty) {}
    rpc DeleteWorkItem (WorkItem) returns (google.protobuf.Empty) {}
    rpc SoftDeleteWorkItem (WorkItem) returns (google.protobuf.Empty) {} // Normally returns Empty, but as this system uses "soft delete" approach, must be returned the resource updated.

    rpc GetWorkItemCheckItems (WorkItemCheckItemGetRequest) returns (WorkItemCheckItemsResponse) {}
}

// Message to respective domain object.
message WorkItem {

    // Base
    string id = 1;
    int32 version = 2;
    bool is_deleted = 3;

    // Specific
    string name = 4;
    string description = 5;
    google.protobuf.Timestamp due_date = 6;
    int32 completed = 7;
    Stage stage = 8;

    string initiative_id = 9; // used just to identify parent on request

    HistoryItem history_item_log = 10;

    repeated User assigned_to = 11;
    repeated WorkItemCheckItem check_items = 12;
}

// Response list of the WorkItems
message WorkItemsResponse {
    repeated WorkItem workItems = 1;
    bool webListWorkAround = 2;
}

// Request for Work Item
message WorkItemGetRequest {

    string id = 1;
    bool is_deleted = 2;
    string initiative_id = 3;
}

// Message to respective domain object.
message WorkItemCheckItem {

    // Base
    string id = 1;
    int32 version = 2;
    bool is_deleted = 3;

    // Specific
    string name = 4;
    bool finished = 5;

    // Define check item order
    int32 index = 6;
    string work_item_check_item_id = 7; // Just to pass parent id

}

// Response list of the WorkItemCheckItems
message WorkItemCheckItemsResponse {
    repeated WorkItemCheckItem workItemCheckItems = 1;
    bool webListWorkAround = 2;
}

// Request for query param
message WorkItemCheckItemGetRequest {
    // Base
    string id = 1;
    string work_item_id = 2;

}